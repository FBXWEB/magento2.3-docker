version: '3.8'

services:
  php:
    build:
      context: .docker/php
    volumes:
      - ./magento:/var/www/html
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/php-custom.ini
    environment:
      COMPOSER_AUTH: ${COMPOSER_AUTH}
    container_name: ${CONTAINER_PHP}
    env_file:
      - .env

  nginx:
    image: nginx:stable-alpine
    container_name: magento-nginx
    volumes:
      - ./magento:/var/www/html
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - php

  mysql:
    image: mysql:5.7
    container_name: ${CONTAINER_MYSQL}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    env_file:
      - .env

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-magento
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: ${CONTAINER_MYSQL}
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - mysql
    env_file:
      - .env

  elasticsearch:
    build:
      context: .docker/elasticsearch
    container_name: magento-elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    env_file:
      - .env

  redis:
    image: redis:5.0
    container_name: magento-redis
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    container_name: magento-mailhog
    ports:
      - "8025:8025"

volumes:
  mysql-data:
